---
- hosts: nc
  
 
  tasks:
  - name: install software  
    yum:
      name: 
      - epel-release 
      - yum-utils 
      - unzip 
      - curl 
      - wget
      - bash-completion 
      - policycoreutils-python 
      - mlocate 
      - bzip2
      state: "latest"
      update_cache: yes

  - name: update system
    yum:
      state: "latest"
      update_only: yes

  - name: install apache
    yum:
      name: httpd

  - name: enable apache service
    service: 
      name: httpd
      enabled: yes
      state: started

  - name: Firewall für http öffnen | 1
    firewalld:
      service: http
      immediate: yes
      permanent: yes
      state: enabled
      zone: public
      
  - name: Firewall für https öffnen | 1
    firewalld:
      service: https
      immediate: yes
      permanent: yes
      state: enabled
      zone: public


######## php installation begin ########################

  - name: install php repo
    yum:
      name:
      - centos-release-scl

  - name: install php
    yum:
      name:
      - rh-php72  
      - rh-php72-php
      - rh-php72-php-gd 
      - rh-php72-php-mbstring
      - rh-php72-php-intl 
      - rh-php72-php-pecl-apcu 
      - rh-php72-php-mysqlnd 
      - rh-php72-php-ldap
      - rh-php72-php-pecl-redis
      - rh-php72-php-opcache 
      - rh-php72-php-imagick
      state: "latest"
      update_cache: yes


  - name: create symbolic link for php module | 1
    file:
      src: /opt/rh/httpd24/root/etc/httpd/conf.d/rh-php72-php.conf 
      dest: /etc/httpd/conf.d/rh-php72-php.conf 
      state: link
      
  - name: create symbolic link for php module | 2
    file:
      src: /opt/rh/httpd24/root/etc/httpd/conf.modules.d/15-rh-php72-php.conf 
      dest: /etc/httpd/conf.modules.d/15-rh-php72-php.conf 
      state: link
      
  - name: create symbolic link for php module | 3
    file:
      src: /opt/rh/httpd24/root/etc/httpd/modules/librh-php72-php7.so
      dest: /etc/httpd/modules/librh-php72-php7.so 
      state: link

  - name: create symbolic link for php module | 4
    file:
      src: /opt/rh/rh-php72/root/bin/php
      dest: /usr/bin/php
      state: link

      
######## php installation end ########################


######## mysql installation begin ########################
      
  - name: install mysql (mariadb)
    yum:
      name:
      - mariadb 
      - mariadb-server
      state: "latest"
      
  - name: enable mysql service
    service: 
      name: mariadb
      enabled: yes
      state: started      
      
######## mysql installation end ########################

######## redis installation begin ########################
    
  - name: install redis
    yum:
      name:
      - redis 
      state: "latest"  

  - name: enable redis service
    service: 
      name: redis
      enabled: yes
      state: started   
      
######## redis installation end ########################

  - name: download nextcloud archive
    get_url: 
      url: https://download.nextcloud.com/server/releases/nextcloud-16.0.1.tar.bz2
      dest: /root/nextcloud.tar.bz2
      
      
  - name: Unarchive nextcloud download archive
    unarchive:
      src: /root/nextcloud.tar.bz2
      dest: /var/www/html/
      remote_src: yes
      
  - name: set ownership to apache:apache
    file:
      path: /var/www/html/nextcloud
      owner: apache
      group: apache
      recurse: yes
      

#### selinux configuration ###########################################

  - name: install selinux packages
    yum:
      name:
      - policycoreutils 
      - policycoreutils-python 
      - selinux-policy 
      - selinux-policy-targeted 
      - libselinux-utils 
      - setroubleshoot-server 
      - setools 
      - setools-console 
      - mcstrans
      state: "latest"
      
  - name: Put SELinux in permissive mode, logging actions that would be blocked.
    selinux:
      policy: targeted
      state: permissive


  - name: reboot the host
    shell: sleep 2 && shutdown -r now "Ansible updates triggered"
    async: 1
    poll: 0
    ignore_errors: true
      
  - name: wait for host after reboot
    local_action: 
      module:  wait_for
        host="{{inventory_hostname}}" 
        port=22
        delay=15 
        state=started 
        timeout=60
        msg="SSH port is not Listening"
        

  - name: Allow apache to modify files in /var/www/html/nextcloud/
    sefcontext:
      target: "{{ item }}"
      setype: httpd_sys_rw_content_t
      state: present
    with_items:
    - '/var/www/html/nextcloud/data(/.*)?'
    - '/var/www/html/nextcloud/config(/.*)?' 
    - '/var/www/html/nextcloud/apps(/.*)?'
    - '/var/www/html/nextcloud/.htaccess'
    - '/var/www/html/nextcloud/.user.ini'
    - '/var/www/html/nextcloud/3rdparty/aws/aws-sdk-php/src/data/logs(/.*)?'
    
      
  - name: Apply new SELinux file context to /var/www/html/nextcloud/
    command: restorecon -irv /var/www/html/nextcloud/
      
      
  - name: Set httpd_can_network_connect flag on and keep it persistent across reboots
    seboolean:
      name: httpd_can_network_connect
      state: yes
      persistent: yes


### apache configuration ##############################
 
  - name: create conf for nextcloud virtual host
    blockinfile:
      path: /etc/httpd/conf.d/nextcloud.conf
      block: |
        <VirtualHost *:80>
          DocumentRoot /var/www/html/nextcloud/ 
          ServerName nc.borg-ibk.local
          <Directory "/var/www/html/nextcloud/">
            Require all granted 
            AllowOverride All 
            Options FollowSymLinks MultiViews
            <IfModule mod_dav.c>
                Dav off
            </IfModule>
          </Directory>
        </VirtualHost>
      insertafter: BOF
      create: yes
  

####### modules configuration - without ansible:
# [root@nc ~]# egrep -v '^#' /etc/httpd/conf.modules.d/00-base.conf
#
# LoadModule alias_module modules/mod_alias.so
# LoadModule authz_core_module modules/mod_authz_core.so
# LoadModule autoindex_module modules/mod_autoindex.so
# LoadModule dir_module modules/mod_dir.so
# LoadModule env_module modules/mod_env.so
# LoadModule expires_module modules/mod_expires.so
# LoadModule headers_module modules/mod_headers.so
# LoadModule mime_module modules/mod_mime.so
# LoadModule rewrite_module modules/mod_rewrite.so
# LoadModule slotmem_shm_module modules/mod_slotmem_shm.so
# LoadModule unixd_module modules/mod_unixd.so




     
  - name: reload apache service
    service: 
      name: httpd
      state: reloaded
        
        
        
          
###
###  ToDo: "Pretty Urls"              
###

###               
###  ToDo: " Enabling SSL"
###          

### -> graphical installation
#
#
#
# admin user: rudi	 
#
# admin password: WS-PW
#
# 
#
# -> edit config.php -> trusted_domains
#
#
#
#
#
#
#
#
#
#
#
#
