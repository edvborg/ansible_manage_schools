--- 

########################## Netzwerk konfigurieren ##################################

### 18.04 machine configuration with netplan file 
# 
#   service networking
#   example: 
#   systemctl restart networking
#
#      
### change to network-manager
#   
# user can configure network devices
#
#   service network-manager
#   example: 
#   systemctl restart network-manager 
#
#
# list all services: systemctl list-unit-files --no-pager
#


## 16.04: enable network manager; 


- name: delete line iface for interface in /etc/network/interfaces
  lineinfile:
    dest: /etc/network/interfaces
    state: absent
    backup: yes
    regexp: '^\s*iface.*en'
    #regexp: "{{ ^\s*iface.* + ansible_interfaces[1]  }}"
  when: ansible_distribution_version == "16.04"
  notify: reload networking and network manager
  tags:
    - network_test
    
    
- name: delete line auto for interface in /etc/network/interfaces
  lineinfile:
    dest: /etc/network/interfaces
    state: absent
    backup: yes
    # regexp: '{{ "^\s*auto.*" + ansible_interfaces[1]  }}'
    regexp: '^\s*auto.*en.*'
  when: ansible_distribution_version == "16.04"
  notify: reload networking and network manager
  tags:
    - network_test



###############################################################
## 18.04: disable netplan dhcp -> enable network manager


- name: find interface file in /etc/netplan
  find:
    paths: /etc/netplan/
    patterns: '*.yaml'
    excludes: '01-network-manager-all.yaml'
  register: netplan_files
  notify: reload networking and network manager
  tags:
    - network_test


#- debug: msg={{ netplan_files.files[0].path }}
#  tags:
#    - network_test
    
- name: delete interface yaml file in /etc/netplan
  file: 
    path: "{{ item.path }}"
    state: absent
    backup: yes
  with_items: "{{ netplan_files.files }}"
  notify: reload networking and network manager  
  tags:
    - network_test    
      
      
- name: copy netplan yaml file to remote
  copy:
    src: "01-network-manager-all.yaml"
    dest: /etc/netplan/
    backup: yes
  when: ansible_distribution_version == "18.04"
  notify: reload networking and network manager
  tags:
    - network_test





